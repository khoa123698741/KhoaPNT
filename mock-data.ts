// Mock data representing Notion API response structure
// TODO: Replace with actual Notion API calls
export const mockNotionBlocks = [
  {
    id: "1",
    type: "heading_1",
    heading_1: {
      rich_text: [{ plain_text: "Ch√†o m·ª´ng ƒë·∫øn v·ªõi Blog C√° Nh√¢n c·ªßa T√¥i" }],
    },
  },
  {
    id: "2",
    type: "paragraph",
    paragraph: {
      rich_text: [
        {
          plain_text:
            "ƒê√¢y l√† m·ªôt ƒëo·∫°n vƒÉn m·∫´u b·∫±ng ti·∫øng Vi·ªát ƒë·ªÉ minh h·ªça c√°ch hi·ªÉn th·ªã n·ªôi dung tr√™n trang web. T√¥i hy v·ªçng r·∫±ng thi·∫øt k·∫ø n√†y s·∫Ω mang l·∫°i tr·∫£i nghi·ªám ƒë·ªçc tho·∫£i m√°i v√† d·ªÖ ch·ªãu cho ng∆∞·ªùi d√πng.",
        },
      ],
    },
  },
  {
    id: "3",
    type: "image",
    image: {
      file: {
        url: "/placeholder.svg?height=400&width=800",
      },
      caption: [{ plain_text: "M·ªôt kh√¥ng gian l√†m vi·ªác t·ªëi gi·∫£n v√† hi·ªán ƒë·∫°i" }],
    },
  },
  {
    id: "4",
    type: "heading_2",
    heading_2: {
      rich_text: [{ plain_text: "T√†i li·ªáu PDF M·∫´u" }],
    },
  },
  {
    id: "5",
    type: "pdf",
    pdf: {
      file: {
        url: "https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf",
      },
      caption: [{ plain_text: "T√†i li·ªáu PDF m·∫´u - c√≥ th·ªÉ m·ªü r·ªông full width" }],
    },
  },
  {
    id: "6",
    type: "paragraph",
    paragraph: {
      rich_text: [
        {
          plain_text:
            "PDF ·ªü tr√™n c√≥ th·ªÉ ƒë∆∞·ª£c m·ªü r·ªông full width, t·∫£i xu·ªëng, ho·∫∑c m·ªü trong tab m·ªõi. Tr√™n mobile s·∫Ω c√≥ c√°c t√πy ch·ªçn thay th·∫ø.",
        },
      ],
    },
  },
  {
    id: "7",
    type: "file",
    file: {
      file: {
        url: "https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf",
      },
      name: "sample-document.pdf",
      caption: [{ plain_text: "File t√†i li·ªáu m·∫´u" }],
    },
  },
  {
    id: "youtube-video-1", // ID m·ªõi cho video YouTube
    type: "video", // Notion block type for video embeds
    video: {
      external: {
        url: "https://www.youtube.com/watch?v=dQw4w9WgXcQ", // V√≠ d·ª• video Rick Astley
      },
      caption: [{ plain_text: "Video gi·ªõi thi·ªáu t·ª´ YouTube" }],
    },
  },
  {
    id: "gallery-example-1", // Example for a child_database block (Gallery)
    type: "child_database",
    child_database: {
      title: "D·ª± √°n c·ªßa t√¥i", // This title will be displayed
    },
    // Notion API will provide the actual database ID here when fetched
    // For mock data, we just need the type and a title for display
  },
  {
    id: "toggle-example-1", // NEW: Example for a toggle block
    type: "toggle",
    toggle: {
      rich_text: [{ plain_text: "M·ªü ƒë·∫ßu - T√¨nh hu·ªëng (Toggle List)" }],
    },
    has_children: true, // Important: indicates it has nested content
    // In a real Notion API response, 'children' would be fetched separately
    // For mock, we can simulate nested blocks here if needed, but the recursive fetch handles it
    children: [
      {
        id: "toggle-child-1",
        type: "paragraph",
        paragraph: {
          rich_text: [{ plain_text: "ƒê√¢y l√† n·ªôi dung b√™n trong Toggle List." }],
        },
      },
      {
        id: "toggle-child-2",
        type: "bulleted_list_item",
        bulleted_list_item: {
          rich_text: [{ plain_text: "M·ª•c con 1" }],
        },
      },
      {
        id: "toggle-child-3",
        type: "bulleted_list_item",
        bulleted_list_item: {
          rich_text: [{ plain_text: "M·ª•c con 2" }],
        },
      },
    ],
  },
  {
    id: "8",
    type: "callout",
    callout: {
      rich_text: [
        {
          plain_text:
            "üí° M·∫πo: B·∫°n c√≥ th·ªÉ upload PDF tr·ª±c ti·∫øp v√†o Notion v√† n√≥ s·∫Ω hi·ªÉn th·ªã ƒë·∫πp tr√™n website v·ªõi ƒë·∫ßy ƒë·ªß ch·ª©c nƒÉng xem, t·∫£i xu·ªëng v√† m·ªü r·ªông.",
        },
      ],
      icon: { emoji: "üí°" },
    },
  },
  {
    id: "9",
    type: "divider",
  },
]
